library(tidyverse)
library(lavaan)
library(mice)
library(lavaanPlot)

d<-read_csv("distances.csv")

# data preparation --------------------------------------
dist <- read_csv("distances.csv", show_col_types = FALSE) %>% 
  mutate(spatial.log = log10(spatial + 1),
         environmental = NA,
         foodweb = NA) %>% 
  filter(species > .1) #removing one outlier

dist.soils <- dist %>%
  mutate(site = ifelse(grepl("lake|pond", site1, ignore.case = TRUE), "Lakes", "Soil")) %>%
  filter(site == "Soil") #or Lakes

dist.lakes <- dist %>%
  mutate(site = ifelse(grepl("lake|pond", site1, ignore.case = TRUE), "Lakes", "Soil")) %>%
  filter(site == "Lakes")

# identify inter- and intra-cluster comparisons
id.inter <- vector()
for(i in 1:nrow(dist.soils)){
  if(substring(dist.soils$site1[i],1,1) != substring(dist.soils$site2[i],1,1)) {
    id.inter <- c(id.inter, i)
  }
}
# remove inter-cluster comparisons
dist.soils <- dist.soils[-id.inter, ]

# environmental distance -------------------------------
load("ab_norm_Adirondack_lakes.RData")
env.lakes <- ab_norm
rownames(env.lakes) <- toupper(rownames(env.lakes))
pca.lakes <- prcomp(env.lakes, scale=TRUE)

# first k components only, >75% variation
plot(cumsum(pca.lakes$sdev^2 / sum(pca.lakes$sdev^2)), type="b")
abline(h=0.75)
pca.lakes <- pca.lakes$x[, 1:4]

load("ab_norm_Biodiversity_Exploratory_soil_food_webs.RData")
env.soils <- ab_norm
# impute NAs with package mice
temp <- mice(env.soils)
# summary(temp)
env.soils <- complete(temp)
pca.soils <- prcomp(env.soils, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.soils$sdev^2 / sum(pca.soils$sdev^2)), type="b")
abline(h=0.75)
pca.soils <- pca.soils$x[, 1:3]

# populate distances by Euclidean norm
for(i in 1:nrow(dist.lakes)){
  site1 <- as.character(dist.lakes[i, "site1"])
  site2 <- as.character(dist.lakes[i, "site2"])
  dist.lakes$environmental[i] <- sqrt(sum((as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ]))^2))
}
for(i in 1:nrow(dist.soils)){
  site1 <- as.character(dist.soils[i, "site1"])
  site2 <- as.character(dist.soils[i, "site2"])
  dist.soils$environmental[i] <- sqrt(sum((as.numeric(pca.soils[site1, ]-pca.soils[site2, ]))^2))
  # dist.soils$environmental[i] = sum(abs(as.numeric(pca.soils[site1, ]-pca.soils[site2, ])))
}

# foodweb distance -------------------------------------
fw.lakes <- read.csv("FoodwebProp_lake.csv")
fw.lakes[ which(fw.lakes$plotname=="Connera lake"), "plotname" ] <- "Connery lake"
rownames(fw.lakes) <- toupper(fw.lakes$plotname)
fw.lakes <- fw.lakes[, -c(8, 19, 20)] # kick out frCB, species_richness and plotname
pca.lakes <- prcomp(fw.lakes, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.lakes$sdev^2 / sum(pca.lakes$sdev^2)), type="b")
abline(h=0.75)
pca.lakes <- pca.lakes$x[, 1:2]

fw.soils <- read.csv("FoodwebProp_soil.csv")
rownames(fw.soils) <- toupper(fw.soils$plotname)
fw.soils <- fw.soils[, -c(8, 19, 20)] # kick out frCB, species_richness and plotname
pca.soils <- prcomp(fw.soils, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.soils$sdev^2 / sum(pca.soils$sdev^2)), type="b")
abline(h=0.75)
pca.soils <- pca.soils$x[, 1:2]

# populate distances by Euclidean norm
for(i in 1:nrow(dist.lakes)){
  site1 <- as.character(dist.lakes[i, "site1"])
  site2 <- as.character(dist.lakes[i, "site2"])
  dist.lakes$foodweb[i] <- sqrt(sum((as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ]))^2))
  # dist.lakes$foodweb[i] = sum(abs(as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ])))
}

for(i in 1:nrow(dist.soils)){
  site1 <- as.character(dist.soils[i, "site1"])
  site2 <- as.character(dist.soils[i, "site2"])
  dist.soils$foodweb[i] <- sqrt(sum((as.numeric(pca.soils[site1, ]-pca.soils[site2, ]))^2))
  # dist.soils$foodweb[i] = sum(abs(as.numeric(pca.soils[site1, ]-pca.soils[site2, ])))
}

# SEM --------------------------------------------------
formula.1 = '
environmental ~ spatial.log
species ~ spatial.log + environmental
foodweb ~ species + environmental
'

dist.soils.std = dist.soils
dist.lakes.std = dist.lakes

for(i in 4:7){
  dist.soils.std[, i] = scale(dist.soils.std[, i])
  dist.lakes.std[, i] = scale(dist.lakes.std[, i])
}

sem.soils.1 = sem(formula.1, data=dist.soils.std)
sem.lakes.1 = sem(formula.1, data=dist.lakes.std)

summary(sem.soils.1)
summary(sem.lakes.1)

# now CIs are on standardized scale
parameterEstimates(sem.lakes.1, rsquare=TRUE)
parameterEstimates(sem.soils.1, rsquare=TRUE)

# plots ------------------------------------------------------------------------
labels <- list(spatial.log="Spatial\ndistance",
               environmental="Environmental\ndistance",
               species="Species\ndissimilarity",
               foodweb="Food-web\ndissimilarity")

lakes.dag <- lavaanPlot(model = sem.lakes.1, 
                        labels = labels,
                        node_options = list(shape = "box", fontname = "Helvetica"), 
                        edge_options = list(color = "grey"), 
                        sig = .05,
                        coefs = TRUE,
                        # stand = TRUE,
                        digits = 2)

soils.dag <- lavaanPlot(model = sem.soils.1, 
                        labels=labels,
                        node_options = list(shape = "box", fontname = "Helvetica"), 
                        edge_options = list(color = "grey"), 
                        sig = .05,
                        coefs = TRUE,
                        # stand = TRUE,
                        digits = 2)

lakes.dag
soils.dag

# confidence interval plots ----------------
lakes <- parameterEstimates(sem.lakes.1, rsquare=TRUE) %>% 
  filter(op != "r2", lhs != rhs) %>% 
  transmute(resp = lhs, pred = rhs,
            estimate = est,
            low = ci.lower,
            up = ci.upper)

soil <- parameterEstimates(sem.soils.1, rsquare=TRUE) %>% 
  filter(op != "r2", lhs != rhs) %>% 
  transmute(resp = lhs, pred = rhs,
            estimate = est,
            low = ci.lower,
            up = ci.upper)

relabel <- function(x) {
  switch(x,
         "environmental" = "Environmental\ndistance",
         "species" = "Species\ndissimilarity",
         "spatial.log" = "Spatial\ndistance",
         "foodweb" = "Food-web\ndissimilarity"
  )
}

pars <- bind_rows(
  lakes  %>% mutate(ecosystem = "Adirondack lakes"),
  soil %>% mutate(ecosystem = "Biodiversity Exploratory soil food webs")
)

pars <- pars %>% 
  mutate(pred = modify(pred, relabel),
         resp = modify(resp, relabel)) %>% 
  mutate(rel = paste(pred, "\n\u2193\n", resp))

pars %>% 
  mutate(rel = factor(rel, levels = unique(pars$rel)[rev(c(1, 2, 3, 5, 4))])) %>% 
  ggplot() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_pointrange(aes(
    x = rel, y = estimate, ymin = low, ymax = up, col = ecosystem
  ), show.legend = FALSE) +
  xlab("") +
  ylab("Coefficient estimate") +
  scale_color_manual(values = c("steelblue", "chocolate")) +
  facet_grid(~ecosystem, scales = "free") +
  theme_bw() +
  theme(axis.text.y = element_text(hjust = .5),
        panel.grid.major.y = element_blank(),
        panel.grid.minor = element_blank()) +
  coord_flip()
