colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-Con[i,]
}
m4<-as.data.frame(as.table(m3))
d2<-as_tibble(m4)
d2$Var2<-as.numeric(as.character(d2$Var2))
colnames(d2)<-c("iter", "year", "con")
u<-full_join(d2, df.R50list[[1]])
for (i in 1:10) {
u<-left_join(u, df.R50list[[i]])
}
u
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-uw.rel.asc[i,]
}
m3
m4<-as.data.frame(as.table(m3))
AC<-as_tibble(m4)
AC$Var2<-as.numeric(as.character(AC$Var2))
colnames(AC)<-c("iter", "year", "A/C")
uw.DF<-right_join(u, AC)
uw.DF.plots<-pivot_longer(uw.DF, 4:13)# make longformat df for use in ggplot
colnames(uw.DF.plots)[5]<-c("threshold")
colnames(uw.DF.plots)[6]<-c("R50")
uw.DF#dataframe used for the correlation analysis for the unweighted webs
uw.DF.plots# dataframe used for the plots for the unweighted webs
#same for the weighted version
#if you ran the whole extinction simulation for the weighted webs run the code as is.
#if you did not run the whole extinction simulation for the weighted webs, first run "wR50.list<-readRDS("w.R50results.RDS")"
#see file named "w_results_df.RDS" for comparison or if you want to skip this part
m<-matrix(NA,1000,34)
colnames(m)<-c(1981:2014)
row.names(m)<-c(1:1000)
mlist<-list()
for (j in 1:10){
a<-wR50.list[[j]]
for (i in 1:34) {
m[,i]<-a[i,]
}
mlist[[j]]<-m
}
THlist<-list("Links/no links","90%","80%","70%","60%","50%", "40%", "30%", "20%", "10%")
df.R50list<-list()
for (i in 1:10) {
m2<-as.data.frame(as.table(mlist[[i]]))
d<-as_tibble(m2)
d$Var2<-as.numeric(as.character(d$Var2))
colnames(d)<-c("iter", "year", THlist[[i]][1])
df.R50list[[i]]<-d
}
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-w.con[i,]
}
m4<-as.data.frame(as.table(m3))
d2<-as_tibble(m4)
d2$Var2<-as.numeric(as.character(d2$Var2))
colnames(d2)<-c("iter", "year", "w.con")
u<-full_join(d2, df.R50list[[1]])
for (i in 1:10) {
u<-left_join(u, df.R50list[[i]])
}
u
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-w.rel.asc[i,]
}
m3
m4<-as.data.frame(as.table(m3))
AC<-as_tibble(m4)
AC$Var2<-as.numeric(as.character(AC$Var2))
colnames(AC)<-c("iter", "year", "A/C")
w.DF<-right_join(u, AC)
w.DF.plots<-pivot_longer(w.DF, 4:13)# make longformat df for use in ggplot
colnames(w.DF.plots)[5]<-c("threshold")
colnames(w.DF.plots)[6]<-c("R50")
w.DF# dataframe used for the correlation analysis
w.DF.plots#longformat dataframe used for ggplot
ggplot(uw.DF.plots, aes(sample=R50))+
stat_qq()+
stat_qq_line()+
facet_wrap(~factor(threshold,levels=c("Links/no links","10%", "20%","30%","40%",
"50%", "60%", "70%", "80%", "90%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
ggtitle(element_text("unweighted webs R50 qqplot at diffrent THs"))
fig4a<-ggplot(uw.DF.plots, aes(x=con, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 15))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 15))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Connectance")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
fig4b<-ggplot(w.DF.plots, aes(x=w.con, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 15))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 15))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Weighted Connectance")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
#combine into fig.4
fig4a+theme(legend.position = "none")+labs(tag = "a")+theme(plot.tag = element_text(size = 20,face = "bold"))+ylim(0,0.5)+
fig4b+theme(axis.title.y=element_blank())+theme(axis.text.y=element_blank())+labs(tag = "b")+
theme(plot.tag = element_text(size = 20,face = "bold"))+ylim(0,0.5)
#if you ran the whole extinction simulation for the unweighted webs, run the code as is.
#if you did not run the whole extinction simulation for the weighted webs, first run "uwR50.list<-readRDS("uw.R50results.RDS")"
#see file named "uw_results_df.RDS" for comparison or if you want to skip this part
m<-matrix(NA,1000,34)
colnames(m)<-c(1981:2014)
row.names(m)<-c(1:1000)
mlist<-list()
for (j in 1:10){
a<-uwR50.list[[j]]
for (i in 1:34) {
m[,i]<-a[i,]
}
mlist[[j]]<-m
}
THlist<-list("Links/no links","90%","80%","70%","60%","50%", "40%", "30%", "20%", "10%")
df.R50list<-list()
for (i in 1:10) {
m2<-as.data.frame(as.table(mlist[[i]]))
d<-as_tibble(m2)
d$Var2<-as.numeric(as.character(d$Var2))
colnames(d)<-c("iter", "year", THlist[[i]][1])
df.R50list[[i]]<-d
}
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-Con[i,]
}
m4<-as.data.frame(as.table(m3))
d2<-as_tibble(m4)
d2$Var2<-as.numeric(as.character(d2$Var2))
colnames(d2)<-c("iter", "year", "con")
u<-full_join(d2, df.R50list[[1]])
for (i in 1:10) {
u<-left_join(u, df.R50list[[i]])
}
u
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-uw.rel.asc[i,]
}
m3
m4<-as.data.frame(as.table(m3))
AC<-as_tibble(m4)
AC$Var2<-as.numeric(as.character(AC$Var2))
colnames(AC)<-c("iter", "year", "A/C")
uw.DF<-right_join(u, AC)
uw.DF.plots<-pivot_longer(uw.DF, 4:13)# make longformat df for use in ggplot
colnames(uw.DF.plots)[5]<-c("threshold")
colnames(uw.DF.plots)[6]<-c("R50")
uw.DF#dataframe used for the correlation analysis for the unweighted webs
uw.DF.plots# dataframe used for the plots for the unweighted webs
#same for the weighted version
#if you ran the whole extinction simulation for the weighted webs run the code as is.
#if you did not run the whole extinction simulation for the weighted webs, first run "wR50.list<-readRDS("w.R50results.RDS")"
#see file named "w_results_df.RDS" for comparison or if you want to skip this part
m<-matrix(NA,1000,34)
colnames(m)<-c(1981:2014)
row.names(m)<-c(1:1000)
mlist<-list()
for (j in 1:10){
a<-wR50.list[[j]]
for (i in 1:34) {
m[,i]<-a[i,]
}
mlist[[j]]<-m
}
THlist<-list("Links/no links","90%","80%","70%","60%","50%", "40%", "30%", "20%", "10%")
df.R50list<-list()
for (i in 1:10) {
m2<-as.data.frame(as.table(mlist[[i]]))
d<-as_tibble(m2)
d$Var2<-as.numeric(as.character(d$Var2))
colnames(d)<-c("iter", "year", THlist[[i]][1])
df.R50list[[i]]<-d
}
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-w.con[i,]
}
m4<-as.data.frame(as.table(m3))
d2<-as_tibble(m4)
d2$Var2<-as.numeric(as.character(d2$Var2))
colnames(d2)<-c("iter", "year", "w.con")
u<-full_join(d2, df.R50list[[1]])
for (i in 1:10) {
u<-left_join(u, df.R50list[[i]])
}
u
m3<-matrix(NA,1000,34)
colnames(m3)<-c(1981:2014)
row.names(m3)<-c(1:1000)
for (i in 1:34) {
m3[,i]<-w.rel.asc[i,]
}
m3
m4<-as.data.frame(as.table(m3))
AC<-as_tibble(m4)
AC$Var2<-as.numeric(as.character(AC$Var2))
colnames(AC)<-c("iter", "year", "A/C")
w.DF<-right_join(u, AC)
w.DF.plots<-pivot_longer(w.DF, 4:13)# make longformat df for use in ggplot
colnames(w.DF.plots)[5]<-c("threshold")
colnames(w.DF.plots)[6]<-c("R50")
w.DF# dataframe used for the correlation analysis
w.DF.plots#longformat dataframe used for ggplot
####Correlation of R50 and the metrics####
##qqplot to see if R50 data is normally distributed
ggplot(uw.DF.plots, aes(sample=R50))+
stat_qq()+
stat_qq_line()+
facet_wrap(~factor(threshold,levels=c("Links/no links","10%", "20%","30%","40%",
"50%", "60%", "70%", "80%", "90%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
ggtitle(element_text("unweighted webs R50 qqplot at diffrent THs"))
#R50 and connectance
#Using glm with link=identity for the response variable with normal distribution (or close to)
#and glm with link= log  for the more skewed ones.
# the no threshold scenario
mod<-glm(uw.DF$`Links/no links`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 90% threshold scenario
mod<-glm(uw.DF$`90%`~uw.DF$con, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
# the 80% threshold scenario
mod<-glm(uw.DF$`80%`~uw.DF$con, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
# the 70% threshold scenario
mod<-glm(uw.DF$`70%`~uw.DF$con, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
# the 60% threshold scenario
mod<-glm(uw.DF$`60%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 50% threshold scenario
mod<-glm(uw.DF$`50%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 40% threshold scenario
mod<-glm(uw.DF$`40%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 30% threshold scenario
mod<-glm(uw.DF$`30%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 20% threshold scenario
mod<-glm(uw.DF$`20%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
# the 10% threshold scenario
mod<-glm(uw.DF$`10%`~uw.DF$con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
#R50 and relative ascendency in unweighted webs
mod<-glm(uw.DF$`Links/no links`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`90%`~uw.DF$`A/C`, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`80%`~uw.DF$`A/C`, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`70%`~uw.DF$`A/C`, family = gaussian(link = "identity"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`60%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`50%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`40%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`30%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`20%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(uw.DF$`10%`~uw.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
#Weighted webs
##qqplot to see if R50 data is normally distributed
ggplot(w.DF.plots, aes(sample=R50))+
stat_qq()+
stat_qq_line()+
facet_wrap(~factor(threshold,levels=c("Links/no links","10%", "20%","30%","40%",
"50%", "60%", "70%", "80%", "90%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
ggtitle(element_text("weighted webs R50 qqplot at diffrent THs"))
#R50 and weighted connectance
#Using glm with link=identity for the response variable with normal distribution (or close to)
#and glm with link= log  for the more skewed ones.
mod<-glm(w.DF$`Links/no links`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`90%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`80%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`70%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`60%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`50%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`40%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`30%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`20%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`10%`~w.DF$w.con, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
#R50 and relative ascendency in weighted webs
#Using glm with link=identity for the response variable with normal distribution (or close to)
#and glm with link= log  for the more skewed ones.
mod<-glm(w.DF$`Links/no links`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`90%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`80%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`70%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`60%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`50%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`40%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`30%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`20%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
mod<-glm(w.DF$`10%`~w.DF$`A/C`, family = gaussian(link = "log"))
summary(mod)
NagelkerkeR2(mod)
fig4a<-ggplot(uw.DF.plots, aes(x=con, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 15))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 15))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Connectance")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
fig4b<-ggplot(w.DF.plots, aes(x=w.con, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 15))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 15))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Weighted Connectance")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
#Combined into fig.5
fig5a+theme(legend.position = "none")+labs(tag = "a")+theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)+
fig5b+theme(axis.title.y=element_blank())+theme(axis.text.y=element_blank())+labs(tag = "b")+
theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)
fig5b<-ggplot(w.DF.plots, aes(x=`A/C`, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 17))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 17))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Relative ascendency")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
#Combined into fig.5
fig5a+theme(legend.position = "none")+labs(tag = "a")+theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)+
fig5b+theme(axis.title.y=element_blank())+theme(axis.text.y=element_blank())+labs(tag = "b")+
theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)
fig5a<-ggplot(uw.DF.plots, aes(x=`A/C`, y=R50, colour=year))+
geom_point()+
stat_smooth(method = "glm",
formula = "y~x",
geom = "smooth",
col="Red")+
theme(axis.text.x = element_text(angle = -90, vjust = 0.5, size = 17))+
theme(axis.text.y = element_text(angle = 0, vjust = 0.5, size = 17))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_x_continuous(labels = scales::number_format(accuracy = 0.01))+
scale_color_gradient(low="yellow", high="Blue",
limits = c(1980, 2014),
breaks = seq(1980, 2014, by = 10))+
theme(plot.title = element_text(hjust = 0))+xlab("Relative ascendency")+ylab("R50")+
theme(strip.text.x = element_text(size = 15))+
theme(axis.title=element_text(size=22))+theme(legend.text=element_text(size=22),
legend.title=element_text(size=22))+
facet_wrap(~factor(threshold, levels=c("Links/no links","90%", "80%","70%","60%",
"50%", "40%", "30%", "20%", "10%")),ncol=5)+
theme(strip.background = element_blank())+theme(panel.border=element_rect(fill=NA))+
theme(strip.text.x = element_text(size = 12))
#Combined into fig.5
fig5a+theme(legend.position = "none")+labs(tag = "a")+theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)+
fig5b+theme(axis.title.y=element_blank())+theme(axis.text.y=element_blank())+labs(tag = "b")+
theme(plot.tag = element_text(size = 18,face = "bold"))+ylim(0,0.5)
fig5a
