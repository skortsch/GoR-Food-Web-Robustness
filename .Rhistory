mutate(site = ifelse(grepl("lake|pond", site1, ignore.case = TRUE), "Lakes", "Soil")) %>%
filter(site == "Lakes")
# identify inter- and intra-cluster comparisons
id.inter <- vector()
for(i in 1:nrow(dist.soils)){
if(substring(dist.soils$site1[i],1,1) != substring(dist.soils$site2[i],1,1)) {
id.inter <- c(id.inter, i)
}
}
# remove inter-cluster comparisons
dist.soils <- dist.soils[-id.inter, ]
# environmental distance -------------------------------
load("ab_norm_Adirondack_lakes.RData")
env.lakes <- ab_norm
rownames(env.lakes) <- toupper(rownames(env.lakes))
pca.lakes <- prcomp(env.lakes, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.lakes$sdev^2 / sum(pca.lakes$sdev^2)), type="b")
abline(h=0.75)
pca.lakes <- pca.lakes$x[, 1:4]
load("ab_norm_Biodiversity_Exploratory_soil_food_webs.RData")
env.soils <- ab_norm
# impute NAs with package mice
temp <- mice(env.soils)
# summary(temp)
env.soils <- complete(temp)
pca.soils <- prcomp(env.soils, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.soils$sdev^2 / sum(pca.soils$sdev^2)), type="b")
abline(h=0.75)
pca.soils <- pca.soils$x[, 1:3]
abline(h=0.75)
# populate distances by Euclidean norm
for(i in 1:nrow(dist.lakes)){
site1 <- as.character(dist.lakes[i, "site1"])
site2 <- as.character(dist.lakes[i, "site2"])
dist.lakes$environmental[i] <- sqrt(sum((as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ]))^2))
}
dist.lakes
for(i in 1:nrow(dist.soils)){
site1 <- as.character(dist.soils[i, "site1"])
site2 <- as.character(dist.soils[i, "site2"])
dist.soils$environmental[i] <- sqrt(sum((as.numeric(pca.soils[site1, ]-pca.soils[site2, ]))^2))
# dist.soils$environmental[i] = sum(abs(as.numeric(pca.soils[site1, ]-pca.soils[site2, ])))
}
fw.lakes <- read.csv("FoodwebProp_lake.csv")
fw.lakes[ which(fw.lakes$plotname=="Connera lake"), "plotname" ] <- "Connery lake"
rownames(fw.lakes) <- toupper(fw.lakes$plotname)
fw.lakes <- fw.lakes[, -c(8, 19, 20)] # kick out frCB, species_richness and plotname
pca.lakes <- prcomp(fw.lakes, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.lakes$sdev^2 / sum(pca.lakes$sdev^2)), type="b")
abline(h=0.75)
pca.lakes <- pca.lakes$x[, 1:2]
abline(h=0.75)
fw.soils <- read.csv("FoodwebProp_soil.csv")
rownames(fw.soils) <- toupper(fw.soils$plotname)
fw.soils <- fw.soils[, -c(8, 19, 20)] # kick out frCB, species_richness and plotname
pca.soils <- prcomp(fw.soils, scale=TRUE)
# first k components only, >75% variation
plot(cumsum(pca.soils$sdev^2 / sum(pca.soils$sdev^2)), type="b")
abline(h=0.75)
pca.soils <- pca.soils$x[, 1:2]
for(i in 1:nrow(dist.lakes)){
site1 <- as.character(dist.lakes[i, "site1"])
site2 <- as.character(dist.lakes[i, "site2"])
dist.lakes$foodweb[i] <- sqrt(sum((as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ]))^2))
# dist.lakes$foodweb[i] = sum(abs(as.numeric(pca.lakes[site1, ]-pca.lakes[site2, ])))
}
for(i in 1:nrow(dist.soils)){
site1 <- as.character(dist.soils[i, "site1"])
site2 <- as.character(dist.soils[i, "site2"])
dist.soils$foodweb[i] <- sqrt(sum((as.numeric(pca.soils[site1, ]-pca.soils[site2, ]))^2))
# dist.soils$foodweb[i] = sum(abs(as.numeric(pca.soils[site1, ]-pca.soils[site2, ])))
}
dist.lakes
for(i in 1:nrow(dist.soils)){
site1 <- as.character(dist.soils[i, "site1"])
site2 <- as.character(dist.soils[i, "site2"])
dist.soils$foodweb[i] <- sqrt(sum((as.numeric(pca.soils[site1, ]-pca.soils[site2, ]))^2))
# dist.soils$foodweb[i] = sum(abs(as.numeric(pca.soils[site1, ]-pca.soils[site2, ])))
}
formula.1 = '
environmental ~ spatial.log
species ~ spatial.log + environmental
foodweb ~ species + environmental
'
dist.soils.std = dist.soils
dist.lakes.std = dist.lakes
for(i in 4:7){
dist.soils.std[, i] = scale(dist.soils.std[, i])
dist.lakes.std[, i] = scale(dist.lakes.std[, i])
}
sem.soils.1 = sem(formula.1, data=dist.soils.std)
sem.lakes.1 = sem(formula.1, data=dist.lakes.std)
summary(sem.soils.1)
summary(sem.lakes.1)
# now CIs are on standardized scale
parameterEstimates(sem.lakes.1, rsquare=TRUE)
parameterEstimates(sem.soils.1, rsquare=TRUE)
labels <- list(spatial.log="Spatial\ndistance",
environmental="Environmental\ndistance",
species="Species\ndissimilarity",
foodweb="Food-web\ndissimilarity")
lakes.dag <- lavaanPlot(model = sem.lakes.1,
labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
sig = .05,
coefs = TRUE,
# stand = TRUE,
digits = 2)
lakes.dag
soils.dag <- lavaanPlot(model = sem.soils.1,
labels=labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
sig = .05,
coefs = TRUE,
# stand = TRUE,
digits = 2)
soils.dag
lakes <- parameterEstimates(sem.lakes.1, rsquare=TRUE) %>%
filter(op != "r2", lhs != rhs) %>%
transmute(resp = lhs, pred = rhs,
estimate = est,
low = ci.lower,
up = ci.upper)
oil <- parameterEstimates(sem.soils.1, rsquare=TRUE) %>%
filter(op != "r2", lhs != rhs) %>%
transmute(resp = lhs, pred = rhs,
estimate = est,
low = ci.lower,
up = ci.upper)
relabel <- function(x) {
switch(x,
"environmental" = "Environmental\ndistance",
"species" = "Species\ndissimilarity",
"spatial.log" = "Spatial\ndistance",
"foodweb" = "Food-web\ndissimilarity"
)
}
soil <- parameterEstimates(sem.soils.1, rsquare=TRUE) %>%
filter(op != "r2", lhs != rhs) %>%
transmute(resp = lhs, pred = rhs,
estimate = est,
low = ci.lower,
up = ci.upper)
relabel <- function(x) {
switch(x,
"environmental" = "Environmental\ndistance",
"species" = "Species\ndissimilarity",
"spatial.log" = "Spatial\ndistance",
"foodweb" = "Food-web\ndissimilarity"
)
}
pars <- bind_rows(
lakes  %>% mutate(ecosystem = "Adirondack lakes"),
soil %>% mutate(ecosystem = "Biodiversity Exploratory soil food webs")
)
pars <- pars %>%
mutate(pred = modify(pred, relabel),
resp = modify(resp, relabel)) %>%
mutate(rel = paste(pred, "\n\u2193\n", resp))
pars %>%
mutate(rel = factor(rel, levels = unique(pars$rel)[rev(c(1, 2, 3, 5, 4))])) %>%
ggplot() +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_pointrange(aes(
x = rel, y = estimate, ymin = low, ymax = up, col = ecosystem
), show.legend = FALSE) +
xlab("") +
ylab("Coefficient estimate") +
scale_color_manual(values = c("steelblue", "chocolate")) +
facet_grid(~ecosystem, scales = "free") +
theme_bw() +
theme(axis.text.y = element_text(hjust = .5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank()) +
coord_flip()
pca.lakes[, ]
dist.lakes[i, "site1"]
env.lakes
#GoR food web info
info_GoR<-load("BalticFW.RData")
str(info_GoR)
info
#biomass
read.csv("biom_GoR_years_sel.csv")
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";")
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";", header=T)
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";", header=T,  row.names = F)
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";", header=TRUE)
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";", header=TRUE, check.names = FALSE)
#biomass
read.csv("biom_GoR_years_sel.csv", sep=";", header=TRUE, check.names = FALSE, row.names = 1)
#biomass
biomass.dat<-read.csv("biom_GoR_years_sel.csv", sep=";", header=TRUE, check.names = FALSE, row.names = 1)
t(biom)
t(biomass.dat)
bm<-t(biomass.dat)
pca.bm <- prcomp(bm, scale=TRUE)
bm<-t(biomass.dat)
pca.bm <- prcomp(bm, scale=TRUE)
library (vegan)
dist(bm)
log1p (bm.spe)
bm.spe<-log1p (bm)
bm.spe
dist(bm.spe)
dist(bm)
vltava.spe <- read.delim ('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/data/vltava-spe.txt', row.names = 1)
vltava.spe
bm
hist(bm[1,])
hist(bm[2,])
hist(bm[2,], breaks=50)
hist(bm[2,], breaks=100)
hist(bm[2,], breaks=1000)
hist(bm[1,], breaks=1000)
dist(bm.spe)
data(varespec)
sptrans <- decostand(varespec, "max")
apply(sptrans, 2, max)
sptrans <- wisconsin(varespec)
## Chi-square: PCA similar but not identical to CA.
## Use wcmdscale for weighted analysis and identical results.
sptrans <- decostand(varespec, "chi.square")
plot(procrustes(rda(sptrans), cca(varespec)))
sptrans
varespec
sp.pa<-1*(bm>0)
sp.pa
vegdist(x, method="jaccard")
vegdist(sp.pa, method="jaccard")
vegdist(sp.pa, method="jaccard", binary=TRUE)
vegdist(bm, method="jaccard")
sp.dist.pa<-vegdist(sp.pa, method="jaccard", binary=TRUE)
sp.dist.bm<-vegdist(bm, method="jaccard")
sp.pa
sp.pa[c(1,2,7),]
sp.pa[7,]
t<-sp.pa[7,]
rbind(sp.pa,t)
sp.pa<-rbind(sp.pa,t)
#presence/absence distance
sp.dist.pa<-vegdist(sp.pa, method="jaccard", binary=TRUE)
sp.dist.pa
#presence/absence distance
sp.dist.pa<-1-vegdist(sp.pa, method="jaccard", binary=TRUE)
sp.dist.pa
#Species dissimilarities are calculated as Jaccard dissimilarities between years based on their species compositions (presence-absence)
#the jaccard dist ranges between 0 and 1, if two samples are equal = 1
#biomass
biomass.dat<-read.csv("biom_GoR_years_sel.csv", sep=";", header=TRUE, check.names = FALSE, row.names = 1)
bm<-t(biomass.dat)
sp.pa<-1*(bm>0)
#presence/absence distance
sp.dist.pa<-1-vegdist(sp.pa, method="jaccard", binary=TRUE)
#biomass dsitance
sp.dist.bm<-1-vegdist(bm, method="jaccard")
#biomass dsitance
sp.dist.bm<-1-vegdist(bm, method="jaccard")
sp.dist.pa
#biomass dsitance
sp.dist.bm<-1-vegdist(bm, method="jaccard")
sp.dist.bm
data(sipoo)
sipoo
m <- betadiver(sipoo)
plot(m)
m <- betadiver(sp.pa)
plot(m)
m <- betadiver(bm)
plot(m)
m <- betadiver(sp.pa)
plot(m)
m <- betadiver(bm)
plot(m)
m <- betadiver(sp.pa)
plot(m)
m
`nestedbetajac` <-
function(comm)
{
beta <- betadiver(comm, method = NA)
b <- beta$b
c <- beta$c
diffbc <- sum(abs(b-c))
sumbc <- sum(b+c)
bmin <- sum(pmin(b, c))
a <- sum(comm) - sum(colSums(comm) > 0)
simpson <- 2*bmin/(2*bmin + a)
nest <- a/(2*bmin + a) * diffbc/(a + sumbc)
jaccard <- sumbc/(a + sumbc)
c(turnover = simpson, nestedness = nest, jaccard = jaccard)
}
nestedbetajac(sp.pa)
sp.dist.bm
plot(sp.dist.bm[,1], sp.dist.pa[,1])
sp.dist.pa
sp.dist.pa[,1]
str( sp.dist.pa)
install.packages("remotes")
remotes::install_github("RIVM-IIV-Microbiome/biomeUtils")
library(biomeUtils)
meltDistanceToTable
dist
View(dist)
t(combn(colnames(sp.dist.pa), 2))
colnames(sp.dist.pa), 2)
mat <- structure(c(0, 0, 0, 0, 0.85, 0, 0, 0, 0.45, 0.85, 0, 0, 0.96,
0.56, 0.45, 0), .Dim = c(4L, 4L), .Dimnames = list(c("A1", "B1",
"C1", "D1"), c("A1", "B1", "C1", "D1")))
nat
mat
sp.dist.pa
str(sp.dist.pa)
str(as.metrix(sp.dist.pa))
str(as.matrix(sp.dist.pa))
t<-str(as.matrix(sp.dist.pa))
t
t<-as.matrix(sp.dist.pa)
t
xy <- t(combn(colnames(t), 2))
xy
data.frame(xy, dist=m[xy])
data.frame(xy, dist=t[xy])
t
xy[1]
t[1]
t
data.frame(xy, dist=t[xy])
#convert distance matrix into a data table
xy <- t(combn(colnames(sp.dist.pa), 2))
data.frame(xy, dist=sp.dist.pa[xy])
#convert distance matrix into a data table
xy <- t(combn(colnames(as.matrix(sp.dist.pa)), 2))
data.frame(xy, dist=sp.dist.pa[xy])
#convert distance matrix into a data table
xy <- t(combn(colnames(as.matrix(sp.dist.pa)), 2))
data.frame(xy, dist=as.matrix(sp.dist.pa)[xy])
colnames(as.matrix(sp.dist.pa))
combn(colnames(as.matrix(sp.dist.pa)), 2)
dist=as.matrix(sp.dist.pa)[xy]
diat
dist
as.matrix(sp.dist.pa)
xy
sp.pa.dist<-data.frame(xy, sp.pa=as.matrix(sp.dist.pa)[xy])
sp.pa.dist
xy.bm <- t(combn(colnames(as.matrix(sp.dist.bm)), 2))
sp.bm.dist<-data.frame(xy.bm, sp.pa=as.matrix(sp.dist.bm)[xy])
sp.bm.dist
xy <- t(combn(colnames(as.matrix(sp.dist.pa)), 2))
sp.pa.dist<-data.frame(xy, sp.pa=as.matrix(sp.dist.pa)[xy])
xy.bm <- t(combn(colnames(as.matrix(sp.dist.bm)), 2))
sp.bm.dist<-data.frame(xy.bm, sp.bm=as.matrix(sp.dist.bm)[xy])
cbind(sp.pa.dist, sp.bm.dist[,3])
plot(sp.dist.bm[,1], sp.bm=sp.dist.pa[,1])
plot(sp.dist.bm[,1], sp.dist.pa[,1])
cbind(sp.pa.dist, sp.bm=sp.bm.dist[,3])
colnames(dist)<-c("Year 1", "Year 2", "sp.pa", "sp.bm")
dist<-cbind(sp.pa.dist, sp.bm=sp.bm.dist[,3])
colnames(dist)<-c("Year 1", "Year 2", "sp.pa", "sp.bm")
dist
dist <- dist[ , c("Year 2", "Year 1", "sp.pa", "sp.bm")]
dist
dist<-cbind(sp.pa.dist, sp.bm=sp.bm.dist[,3])
colnames(dist)<-c("Year.1", "Year.2", "sp.pa", "sp.bm")
dist <- dist[ , c("Year.2", "Year.1", "sp.pa", "sp.bm")]
pca.env
names(env.gor)
env.gor.sel<-as_tibble(env.gor) %>% select("Year", "B.Temperature", "B.Salinity", "B.Phosphate", "B.Oxygen", "Sum_discharge") %>%
#gather(key="Env.var", value="Value", "B.Temperature", "B.Salinity", "B.Phosphate", "B.Oxygen", "Sum_discharge") %>%
filter(Year%in%years.sel)
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel$Year
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
pca.env
dist
dist <- read_csv("distances.csv", show_col_types = FALSE) %>%
mutate(spatial.log = log10(spatial + 1),
environmental = NA,
foodweb = NA) %>%
filter(species > .1) #removing one outlier
dist
dist
xy <- t(combn(colnames(as.matrix(sp.dist.pa)), 2))
sp.pa.dist<-data.frame(xy, sp.pa=as.matrix(sp.dist.pa)[xy])
xy.bm <- t(combn(colnames(as.matrix(sp.dist.bm)), 2))
sp.bm.dist<-data.frame(xy.bm, sp.bm=as.matrix(sp.dist.bm)[xy])
dist<-cbind(sp.pa.dist, sp.bm=sp.bm.dist[,3])
colnames(dist)<-c("Year.1", "Year.2", "sp.pa", "sp.bm")
dist <- dist[ , c("Year.2", "Year.1", "sp.pa", "sp.bm")] #change order of two first columns
dist
dist <- dist %>% mutate(environmental = NA, foodweb = NA) %>% filter(species > .1) #removing one outlier
dist <- dist %>% mutate(environmental = NA, foodweb = NA) %>% filter(sp.pa > .1) #removing one outlier
dist
dist <- dist %>% mutate(environmental = NA, foodweb = NA)
dist <- dist %>% mutate(environmental = NA, foodweb = NA, fisheries = NA, traits=NA)
dist
for(i in 1:nrow(dist)){
site1 <- as.character(dist[i, "Year.1"])
site2 <- as.character(dist[i, "Year.2"])
dist$environmental[i] <- sqrt(sum((as.numeric(pca.env[Year.1, ]-pca.env[Year.2, ]))^2))
}
dist
as.character(dist[i, "Year.1"])
for(i in 1:nrow(dist)){
Year.1 <- as.character(dist[i, "Year.1"])
Year.2 <- as.character(dist[i, "Year.2"])
dist$environmental[i] <- sqrt(sum((as.numeric(pca.env[Year.1, ]-pca.env[Year.2, ]))^2))
}
pca.env
plot(cumsum(pca.env$sdev^2 / sum(pca.env$sdev^2)), type="b")
abline(h=0.75)
pca.env <- pca.lakes$x[, 1:2]
pca.env
pca.lakes$x[, 1:2]
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel$Year
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
plot(cumsum(pca.env$sdev^2 / sum(pca.env$sdev^2)), type="b")
abline(h=0.75)
load("ab_norm_Adirondack_lakes.RData")
env.lakes <- ab_norm
rownames(env.lakes) <- toupper(rownames(env.lakes))
pca.lakes <- prcomp(env.lakes, scale=TRUE)
pca.lakes <- pca.lakes$x[, 1:4]
pca.lakes
env.lakes
env.gor.sel
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel[,1]
rownames(env.gor.sel)
env.gor.sel
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
pca.env
env.gor.sel[,1]
# environmental distance -------------------------------
load("ab_norm_Adirondack_lakes.RData")
env.lakes <- ab_norm
env.lakes
env.gor.sel<-as.data.frame(env.gor.sel)
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel[,1]
env.gor.sel
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
pca.env
pca.lakes <- prcomp(env.lakes, scale=TRUE)
pca.lakes
plot(cumsum(pca.env$sdev^2 / sum(pca.env$sdev^2)), type="b")
abline(h=0.75)
pca.env <- pca.lakes$x[, 1:2]
pca.env[Year.1, ]
i<-
Year.1 <- as.character(dist[i, "Year.1"])
i<-1
Year.1 <- as.character(dist[i, "Year.1"])
Year.1
Year.2 <- as.character(dist[i, "Year.2"])
Year.2
pca.env[Year.1, ]
pca.env
names(env.gor)
env.gor.sel<-as_tibble(env.gor) %>% select("Year", "B.Temperature", "B.Salinity", "B.Phosphate", "B.Oxygen", "Sum_discharge") %>%
#gather(key="Env.var", value="Value", "B.Temperature", "B.Salinity", "B.Phosphate", "B.Oxygen", "Sum_discharge") %>%
filter(Year%in%years.sel)
env.gor.sel<-as.data.frame(env.gor.sel)
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel[,1]
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
pca.env[Year.1, ]
pca.env
pca.env <- pca.lakes$x[, c(1:2)]
pca.env
pca.env <- pca.env$x[, c(1:2)]
pca.env
plot(cumsum(pca.env$sdev^2 / sum(pca.env$sdev^2)), type="b")
abline(h=0.75)
pca.env <- pca.env$x[, c(1:2)]
pca.env$x
env.gor.sel<-as.data.frame(env.gor.sel)
#PCA on environmental data
rownames(env.gor.sel) <- env.gor.sel[,1]
pca.env <- prcomp(env.gor.sel[,-1], scale=TRUE)
pca.env$x
pca.env$x[, c(1:2)]
pca.env[Year.1, ]
i<-1
Year.1
pca.env[Year.1, ]
pca.env[1, ]
pca.env
pca.env <- pca.env$x[, c(1:2)]
pca.env
pca.env[1,]
pca.env["1981",]
as.numeric(pca.env[Year.1, ]-pca.env[Year.2, ])
for(i in 1:nrow(dist)){
#i<-1
Year.1 <- as.character(dist[i, "Year.1"])
Year.2 <- as.character(dist[i, "Year.2"])
dist$environmental[i] <- sqrt(sum((as.numeric(pca.env[Year.1, ]-pca.env[Year.2, ]))^2))
}
dist
